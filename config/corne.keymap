#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define HOST_OS 2
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"
#include "keypos.h"

/* layer and key shortcuts */
#define NONE &none
#define ___  &trans

#define MEH   LC(LS(LALT))

#define DEF 0
#define NAV 1
#define FUN 2
#define SYS 3


#define QUICK_TAP_MS 175

/* Homerow mods */
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "tap-preferred"; \
        tapping-term-ms = <200>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        bindings = <&kp>, <&kp>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

ZMK_BEHAVIOR(tp, hold_tap,
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&kp>;
)

// tap: space | shift + tap: dot -> space -> sticky shift | hold: activate layer
ZMK_BEHAVIOR(lt_spc, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&spc_morph>;
)
ZMK_BEHAVIOR(spc_morph, mod_morph,
    bindings = <&kp SPACE>, <&dot_spc>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
ZMK_BEHAVIOR(dot_spc, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)

// tap: dot | shift + tap: colon
ZMK_BEHAVIOR(dot_morph, mod_morph,
    bindings = <&kp DOT>, <&kp COLON>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
/* ZMK_COMBO(lbrc,  &kp LBRC, P_A P_R, DEF) */
/* ZMK_COMBO(lbkt,  &kp LBKT, P_R P_S, DEF) */
/* ZMK_COMBO(lpar,  &kp LPAR, P_S P_T, DEF) */
/* ZMK_COMBO(rpar,  &kp RPAR, P_N P_E, DEF) */
/* ZMK_COMBO(rbkt,  &kp RBKT, P_E P_I, DEF) */
/* ZMK_COMBO(rbrc,  &kp RBRC, P_I P_O, DEF) */

/* ZMK_COMBO(minus, &kp MINUS, P_A P_T, DEF) */
/* ZMK_COMBO(excl,  &kp EXCL, P_W P_F, DEF) */
/* ZMK_COMBO(plus,  &kp PLUS, P_N P_O, DEF) */
/* ZMK_COMBO(amps,  &kp AMPS, P_U P_Y, DEF) */

/* ZMK_COMBO(hash,  &kp HASH, P_R P_F, DEF) */
/* ZMK_COMBO(dolla, &kp DOLLAR, P_F P_T, DEF) */
/* ZMK_COMBO(perc,  &kp PERCENT, P_F P_D, DEF) */
/* ZMK_COMBO(caret, &kp CARET, P_N P_U, DEF) */
/* ZMK_COMBO(star,  &kp STAR, P_U P_I, DEF) */
/* ZMK_COMBO(pipe,  &kp PIPE, P_Y P_SEMICOLON, DEF) */
/* ZMK_COMBO(at,    &kp AT, P_R P_W, DEF) */

/* ZMK_COMBO(media_rewind,     &kp RBRC, P_J P_L, NAV) */
/* ZMK_COMBO(media_forward,    &kp RBRC, P_Y P_SEMICOLON, NAV) */
/* ZMK_COMBO(media_play_pause, &kp C_PLAY_PAUSE, P_J P_SEMICOLON, NAV) */
/* ZMK_COMBO(esc, &kp ESC, P_A P_R, NAV) */

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €


ZMK_CONDITIONAL_LAYER(NAV FUN, SYS)

/* keymap */
ZMK_LAYER(default_layer,
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          NONE           &kp Q          &kp W          &kp F          &kp P          &kp G            &kp J          &kp L          &kp U          &kp Y          &kp SEMICOLON  NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &hml LCTRL A   &hml LGUI R    &hml LALT S    &hml LSHFT T   &hml LCMD D      &hmr RCMD H    &hmr RSHFT N   &hmr RALT E    &hmr RGUI I    &hmr RCTRL O   NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp Z          &kp X          &kp C          &kp V          &kp B            &kp K          &kp M          &kp COMMA      &kp DOT        &kp FSLH       NONE
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                                       &kp DEL        &kp BKSP       &tp FUN TAB      &lt_spc NAV DEF &kp RET       &kp SQT
      //                                              ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
        )

ZMK_LAYER(nav_layer,
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          NONE           &out OUT_TOG   &kp ESC        NONE           NONE           NONE             NONE           &kp HOME       &kp PG_DN      &kp PG_UP      &kp END        NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp C_PREV     &kp C_VOL_DN   &kp C_MUTE     &kp C_VOL_UP   &kp C_NEXT       &kp C_PP       &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp N1         &kp N2         &kp N3         &kp N4         &kp N5           &kp N6         &kp N7         &kp N8         &kp N9         &kp N0         NONE
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                                       ___            ___            ___              ___            ___            ___
      //                                              ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
          )

ZMK_LAYER(fn_layer,
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          NONE           &kp F12        &kp F7         &kp F8         &kp F9         NONE             NONE           &kp C_VOL_DN   &kp C_MUTE     &kp C_VOL_UP   &kp C_AL_LOCK  NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp F11        &kp F4         &kp F5         &kp F6         NONE             NONE           &kp C_PREV     &kp C_PP       &kp C_NEXT     NONE           NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp F10        &kp F1         &kp F2         &kp F3         NONE             NONE           NONE           NONE           NONE           NONE           NONE
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                                       ___            ___            ___              ___            ___            ___ 
      //                                              ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
          )

ZMK_LAYER(system_layer,
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          NONE           &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     ___            ___            ___            ___            ___            NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &kp T          ___            ___            ___            &bootloader      &bootloader    ___            ___            ___            ___            NONE
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          NONE           &bt BT_CLR     ___            ___            ___            &sys_reset       &sys_reset     ___            ___            ___            ___            NONE
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                                       ___            ___            ___              ___            ___            ___
      //                                              ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
          )
